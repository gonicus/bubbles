name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-agent:
    steps:
      - uses: actions/checkout@v5.0.0
      - run: |
          cd bubbles-agent
          cargo build --release
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: bubbles-agent
          path: bubbles-agent/target/release/bubbles-agent
          retention-days: 1
  build-sommelier:
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y meson libgbm-dev libpixman-1-dev \
            libwayland-client++1 libwayland-client-extra++1 \
            wayland-utils libxcb-composite0-dev libxcb-shape0-dev \
            libxkbcommon-dev wayland-scanner++ wayland-protocols \
            libwayland-bin python3-jinja2 libgbm1 libpixman-1-0 \
            libwayland-client0 libxcb-composite0 libxcb-shape0 \
            libxkbcommon0 cmake build-essential pkgconf libdrm-dev \
            waylandpp-dev libwayland-dev
      - name: Build
        run: |
          git clone --depth=1 https://chromium.googlesource.com/chromiumos/platform2
          cd platform2/vm_tools/sommelier/
          meson setup build -Dwith_tests=false
          meson compile -C build
          sudo meson install -C build
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: sommelier
          path: /usr/local/bin/sommelier
          retention-days: 1
  build-vm:
    needs:
    - build-agent
    - build-sommelier
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v5.0.0
        with:
          repository: lxc/lxc-ci
          ref: bc78ee5e27ade74f31162f66f370d89ec2567667
          sparse-checkout: |
            images/debian.yaml
          sparse-checkout-cone-mode: false
          path: lxc-ci
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: |
          set -ex
          sudo apt-get update
          sudo apt-get install -y e2fsprogs qemu-utils debootstrap yq
      - run: |
          cat lxc-ci/images/debian.yaml | yq -y '
            .image = {
              "distribution": "debian",
              "name": "debian-trixie-x86_64",
              "release": "trixie",
              "description": "Debian",
              "architecture": "x86_64"
            }' | yq -y '
            .packages.sets += [{"action": "install", "packages": [
              "starship",
              "gnome-console",
              "libgbm1",
              "libpixman-1-0",
              "libwayland-client0",
              "libxcb-composite0",
              "libxcb-shape0",
              "libxkbcommon0",
              "socat",
              "libglib2.0-bin",
              "nix-bin"
            ]}]
            ' | yq -y '
            .files += [
              {
                "path": "/usr/local/bin/",
                "source": "./usrlocalbin"
              }
            ]
            ' > debian.yaml
      - name: Download bubbles-agent and sommelier
        uses: actions/download-artifact@v5
        with:
          path: usrlocalbin
          merge-multiple: true
      - run: |
          nix-shell -p distrobuilder --command 'ln -s $(which distrobuilder) distrobuilder'
          nix-shell -p oras --command 'ln -s $(which oras) oras'
          ls -lR usrlocalbin
          sudo ./distrobuilder build-incus ./debian.yaml debian-output --vm
          ls -lR debian-output
          cd debian-output
          docker run -v $PWD:/disk debian:trixie sh -c '
            set -e
            apt-get update
            apt-get install -y guestfs-tools oras
            cd /disk
            virt-get-kernel -a disk.qcow2
            mv vmlinuz* vmlinuz
            mv initrd.img* initrd.img
          '
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo -n "$GITHUB_TOKEN" | ./oras login -u ${{ github.actor }} --password-stdin ghcr.io
          cd debian-output
          ../oras push ghcr.io/${{ github.repository }}/vm-image:${{ github.sha }} vmlinuz:application/vnd.bubbles.img.v1 initrd.img:application/vnd.bubbles.img.v1 disk.qcow2:application/vnd.bubbles.img.v1
